# https://docs.helix-editor.com/keymap.html
# https://github.com/helix-editor/helix/blob/master/helix-term/src/commands.rs
# https://github.com/LGUG2Z/helix-vim/blob/master/config.toml
# https://github.com/helix-editor/helix/wiki/Migrating-from-Vim
# https://github.com/helix-editor/helix/tree/master/runtime/themes
theme = "rose_pine"

[editor]
scrolloff                 = 0
# mouse                     = true
# middle-click-paste        = true
# scroll-lines              = 3
# shell                     = ["sh", "-c"]
line-number               = "relative"
cursorline                = true
cursorcolumn              = true
# gutters                   = ["diagnostics", "spacer", "line-numbers", "spacer", "diff"]
# auto-completion           = true
# auto-format               = true
# auto-save                 = false
idle-timeout              = 50
completion-timeout        = 50
preview-completion-insert = false
completion-trigger-len    = 1
completion-replace        = true
# auto-info                 = true
true-color                = true
undercurl                 = true
# rulers                    = []
bufferline                = "always"
color-modes               = true
text-width                = 80
# workspace-lsp-roots       = []
# default-line-ending       = "native"
# insert-final-newline      = true
popup-border              = "all"
# indent-heuristic          = "hybrid"
# jump-label-alphabet       = "abcdefghijklmnopqrstuvwxyz"

[editor.statusline]
left        = ["mode", "spacer", "version-control", "file-name", "file-encoding", "read-only-indicator"]
center      = ["register", "selections", "primary-selection-length"]
right       = ["diagnostics", "file-type", "position", "position-percentage", "total-line-numbers", "spinner"]
mode.normal = "NOR"
mode.insert = "INS"
mode.select = "SEL"

[editor.lsp]
display-messages = true
# display-inlay-hints = true

[editor.cursor-shape]
insert = "bar"
select = "underline"

[editor.file-picker]
hidden = false

[editor.search]
wrap-around = false

[editor.whitespace.render]
# space   = "all"
tab     = "all"
# newline = "all"
# [editor.whitespace.characters]
# newline = "î¯ª"

[editor.indent-guides]
render      = true
skip-levels = 1

[editor.gutters]
layout = ["diagnostics", "line-numbers", "spacer", "diff"]

[editor.gutters.line-numbers]
min-width = 1

[editor.soft-wrap]
enable            = true
max-wrap          = 0
max-indent-retain = 0
wrap-indicator    = ""

# [editor.smart-tab]
# supersede-menu  = true

[keys.normal]
"esc" = ["collapse_selection", "keep_primary_selection"]
"C-r" = ":config-reload"
"K"   = "hover"

# Movement
# "A-." = "repeat_last_motion"    # Repeat last motion
# "C-b" = "page_up"               # Move page up
# "C-f" = "page_down"             # Move page down
# "C-u" = "page_cursor_half_up"   # Move cursor and page half page up
# "C-d" = "page_cursor_half_down" # Move cursor and page half page down
# "C-i" = "jump_forward"          # Jump forward on the jumplist
# "C-o" = "jump_backward"         # Jump backward on the jumplist
# "C-s" = "save_selection"        # Save the current selection to the jumplist
"C-d" = ["page_cursor_half_down", "align_view_center"]
"C-u" = ["page_cursor_half_up",   "align_view_center"]
"L" = "extend_to_line_end"
"H" = "extend_to_line_start"

# Changes
# "r"      =  "replace"                 # Replace with a character
# "R"      =  "replace_with_yanked"     # Replace with yanked text
# "~"      =  "switch_case"             # Switch case of the selected text
# "`"      =  "switch_to_lowercase"     # Set the selected text to lower case
# "A-`"    =  "switch_to_uppercase"     # Set the selected text to upper case
# "i"      =  "insert_mode"             # Insert before selection
# "a"      =  "append_mode"             # Insert after selection (append)
# "I"      =  "insert_at_line_start"    # Insert at the start of the line
# "A"      =  "insert_at_line_end"      # Insert at the end of the line
# "o"      =  "open_below"              # Open new line below selection
# "O"      =  "open_above"              # Open new line above selection
# "."      =  "N/A"                     # Repeat last insert
# "u"      =  "undo"                    # Undo change
# "U"      =  "redo"                    # Redo change
# "A-u"    =  "earlier"                 # Move backward in history
# "A-U"    =  "later"                   # Move forward in history
# "y"      =  "yank"                    # Yank selection
# "p"      =  "paste_after"             # Paste after selection
# "P"      =  "paste_before"            # Paste before selection
# "<reg>   =  "select_register"         # Select a register to yank to or paste from
# ">"      =  "indent"                  # Indent selection
# "<       =  "unindent"                # Unindent selection
# "="      =  "format_selections"       # Format selection (currently nonfunctional/disabled) (<strong>LSP</strong>)
# "d"      =  "delete_selection"        # Delete selection
# "A-d"    =  "delete_selection_noyank" # Delete selection, without yanking
# "c"      =  "change_selection"        # Change selection (delete and enter insert mode)
# "A-c"    =  "change_selection_noyank" # Change selection (delete and enter insert mode, without yanking)
# "C-a"    =  "increment"               # Increment object (number) under cursor
# "C-x"    =  "decrement"               # Decrement object (number) under cursor
# "Q"      =  "record_macro"            # Start/stop macro recording to the selected register (experimental)
# "q"      =  "replay_macro"            # Play back a recorded macro from the selected register (experimental)
"i"   = ["insert_mode", "collapse_selection"]
"a"   = ["append_mode", "collapse_selection"]
"A-k" = ["extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before"]
"A-j" = ["extend_to_line_bounds", "delete_selection", "paste_after"]

# Shell
# "|"   = "shell_pipe"          # Pipe each selection through shell command, replacing with output
# "A-|" = "shell_pipe_to"       # Pipe each selection into shell command, ignoring output
# "!"   = "shell_insert_output" # Run shell command, inserting output before each selection
# "A-!" = "shell_append_output" # Run shell command, appending output after each selection
# "$"   = "shell_keep_pipe"     # Pipe each selection into shell command, keep selections where command returned 0

# Selection manipulation
# "s"      = "select_regex"                       # Select all regex matches inside selections
# "S"      = "split_selection"                    # Split selection into sub selections on regex matches
# "A-s"    = "split_selection_on_newline"         # Split selection on newlines
# "A-minus"= "merge_selections"                   # Merge selections
# "A-_"    = "merge_consecutive_selections"       # Merge consecutive selections
# "&"      = "align_selections"                   # Align selection in columns
# "_"      = "trim_selections"                    # Trim whitespace from the selection
# ";"      = "collapse_selection"                 # Collapse selection onto a single cursor
# "A-;"    = "flip_selections"                    # Flip selection cursor and anchor
# "A-:"    = "ensure_selections_forward"          # Ensures the selection is in forward direction
# ","      = "keep_primary_selection"             # Keep only the primary selection
# "A-,"    = "remove_primary_selection"           # Remove the primary selection
# "C"      = "copy_selection_on_next_line"        # Copy selection onto the next line (Add cursor below)
# "A-C"    = "copy_selection_on_prev_line"        # Copy selection onto the previous line (Add cursor above)
# "("      = "rotate_selections_backward"         # Rotate main selection backward
# ")"      = "rotate_selections_forward"          # Rotate main selection forward
# "A-("    = "rotate_selection_contents_backward" # Rotate selection contents backward
# "A-)"    = "rotate_selection_contents_forward"  # Rotate selection contents forward
# "%"      = "select_all"                         # Select entire file
# "x"      = "extend_line_below"                  # Select current line, if already selected, extend to next line
# "X"      = "extend_to_line_bounds"              # Extend selection to line bounds (line-wise selection)
# "A-x"    = "shrink_to_line_bounds"              # Shrink selection to line bounds (line-wise selection)
# "J"      = "join_selections"                    # Join lines inside selection
# "A-J"    = "join_selections_space"              # Join lines inside selection and select the inserted space
# "K"      = "keep_selections"                    # Keep selections matching the regex
# "A-K"    = "remove_selections"                  # Remove selections matching the regex
# "C-c"    = "toggle_comments"                    # Comment/uncomment the selections
# "A-o"    = "expand_selection"                   # Expand selection to parent syntax node (<strong>TS</strong>)
# "A-i"    = "shrink_selection"                   # Shrink syntax tree object selection (<strong>TS</strong>)
# "A-p"    = "select_prev_sibling"                # Select previous sibling node in syntax tree (<strong>TS</strong>)
# "A-n"    = "select_next_sibling"                # Select next sibling node in syntax tree (<strong>TS</strong>)
"X" = "extend_line_up"
";" = "flip_selections"
"," = "remove_primary_selection"

# Search
# "/" = "search"           # Search for regex pattern
# "?" = "rsearch"          # Search for previous pattern
# "n" = "search_next"      # Select next search match
# "N" = "search_prev"      # Select previous search match
# "*" = "search_selection" # Use current selection as the search pattern
"n" = ["search_next", "align_view_center"]
"N" = ["search_prev", "align_view_center"]
"*" = ["move_prev_word_start", "move_next_word_end", "search_selection"]

# Minor modes
# Goto mode
"G"     = "goto_file_end"
"tab"   = "goto_next_buffer"
"S-tab" = "goto_previous_buffer"
# Match mode
"S" = "surround_add"
# Window mode
"C-h" = "jump_view_left"
"C-j" = "jump_view_down"
"C-k" = "jump_view_up"
"C-l" = "jump_view_right"
"C-4" = "vsplit" # C-\
"C-7" = "hsplit" # C-minus
# Insert mode
"backspace" = "delete_char_backward"

# Goto mode
[keys.normal.g]
# "g" = "goto_file_start"          # Go to line number n else start of file
"e" = "no_op" # "goto_last_line"           # Go to the end of the file
# "f" = "goto_file"                # Go to files in the selections
# "h" = "goto_line_start"          # Go to the start of the line
# "l" = "goto_line_end"            # Go to the end of the line
# "s" = "goto_first_nonwhitespace" # Go to first non-whitespace character of the line
"t" = "no_op" # "goto_window_top"          # Go to the top of the screen
"c" = "no_op" # "goto_window_center"       # Go to the middle of the screen
"b" = "no_op" # "goto_window_bottom"       # Go to the bottom of the screen
# "d" = "goto_definition"          # Go to definition LSP
# "y" = "goto_type_definition"     # Go to type definition LSP
# "r" = "goto_reference"           # Go to references LSP
# "i" = "goto_implementation"      # Go to implementation LSP
# "a" = "goto_last_accessed_file"  # Go to the last accessed/alternate file
# "m" = "goto_last_modified_file"  # Go to the last modified/alternate file
"n" = "no_op" #3 "goto_next_buffer"         # Go to next buffer
"p" = "no_op" #3 "goto_previous_buffer"     # Go to previous buffer
# "." = "goto_last_modification"   # Go to last modification in current file
"j" = "no_op" # "move_line_down"           # Move down textual (instead of visual) line
# "k" = "move_line_up"             # Move up textual (instead of visual) line
# "w" = "goto_word"                # Show labels at each word and select the word that belongs to the entered labels
"s" = "select_references_to_symbol_under_cursor"
"R" = "rename_symbol"
"a" = "code_action"

# Space mode
[keys.normal.space]
# "f"     =  # file_picker"                              # Open file picker
"F"     = "no_op" # file_picker_in_current_directory"         # Open file picker at current working directory
"b"     = "no_op" # buffer_picker"                            # Open buffer picker
"j"     = "no_op" # jumplist_picker"                          # Open jumplist picker
"g"     = "no_op" # changed_file_picker"                      # Open changed file picker
"G"     = "no_op" # "N/A"                                      # Debug (experimental)
"k"     = "no_op" # "hover"                                    # Show documentation for item under cursor in a popup (LSP)
"s"     = "no_op" # "symbol_picker"                            # Open document symbol picker (LSP)
"S"     = "no_op" # "workspace_symbol_picker"                  # Open workspace symbol picker (LSP)
"d"     = "no_op" # "diagnostics_picker"                       # Open document diagnostics picker (LSP)
"D"     = "no_op" # "workspace_diagnostics_picker"             # Open workspace diagnostics picker (LSP)
"r"     = "no_op" # "rename_symbol"                            # Rename symbol (LSP)
"a"     = "no_op" # "code_action"                              # Apply code action (LSP)
"h"     = "no_op" # "select_references_to_symbol_under_cursor" # Select symbol references (LSP)
"'"     = "no_op" # "last_picker"                              # Open last fuzzy picker
# "w"     = "N/A"                                      # Enter window mode
"c"     = "no_op" # "toggle_comments"                          # Comment/uncomment selections
"C"     = "no_op" # "toggle_block_comments"                    # Block comment/uncomment selections
"A-c"   = "no_op" # "toggle_line_comments"                     # Line comment/uncomment selections
# "p"     = "paste_clipboard_after"                    # Paste system clipboard after selections
# "P"     = "paste_clipboard_before"                   # Paste system clipboard before selections
# "y"     = "yank_to_clipboard"                        # Yank selections to clipboard
# "Y"     = "yank_main_selection_to_clipboard"         # Yank main selection to clipboard
# "R"     = "replace_selections_with_clipboard"        # Replace selections by clipboard contents
# "/"     = "global_search"                            # Global search in workspace folder
# "?"     = "command_palette"                          # Open command palette
"n" = ":new"
"w" = ":write"
"W" = ":write!"
"q" = ":quit"
"Q" = ":quit!"
"x" = ":buffer-close"
"X" = ":buffer-close!"
# Picker mode
"f" = { "f" = "file_picker", "F" = "file_picker_in_current_buffer_directory", "b" = "buffer_picker", "j" = "jumplist_picker", "g" = "changed_file_picker", "s" = "symbol_picker", "S" = "workspace_symbol_picker", "d" = "diagnostics_picker", "D" = "workspace_diagnostics_picker", "'" = "last_picker" }

# Select/extend mode
[keys.select]
# esc = ["collapse_selection", "keep_primary_selection", "normal_mode"]
"esc" = ["collapse_selection", "normal_mode"]
"C-d" = "page_cursor_half_down"
"C-u" = "page_cursor_half_up" 
"L"   = "extend_to_line_end"
"H"   = "extend_to_line_start"
"A-k" = ["extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before"]
"A-j" = ["extend_to_line_bounds", "delete_selection", "paste_after"]
"X"   = "extend_line_up"
";"   = "flip_selections"
","   = "remove_primary_selection"
"G"   = "goto_file_end"
"S"   = "surround_add"

# Insert mode
[keys.insert]
"esc" = ["collapse_selection", "normal_mode"]
# "Escape" = "normal_mode"            # Switch to normal mode
# "C-s"    = "commit_undo_checkpoint" # Commit undo checkpoint
# "C-x"    = "completion"             # Autocomplete
# "C-r"    = "insert_register"        # Insert a register content
# "C-w"    = "delete_word_backward"   # Delete previous word
# "A-d"    = "delete_word_forward"    # Delete next word
# "C-u"    = "kill_to_line_start"     # Delete to start of line
# "C-k"    = "kill_to_line_end"       # Delete to end of line
# "C-h"    = "delete_char_backward"   # Delete previous char
# "C-d"    = "delete_char_forward"    # Delete next char
# "C-j"    = "insert_newline"         # Insert new line
"C-c" = "toggle_comments"
"C-k" = "move_line_up"
"C-j" = "move_line_down"
"C-h" = "move_char_left"
"C-l" = "move_char_right"
# "C-t" = "indent"
# "C-d" = "unindent"
