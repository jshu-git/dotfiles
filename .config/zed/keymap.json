[
  {
    "bindings": {
      "cmd-d": "workspace::ToggleZoom",
      "cmd-e": "workspace::ToggleRightDock",
      "cmd-t": "workspace::ToggleBottomDock",
      "cmd-r": "pane::RevealInProjectPanel",
      "cmd-shift-x": "zed::Extensions",
      "cmd-shift-o": "projects::OpenRecent",
      "tab": "menu::SelectNext",
      "shift-tab": "menu::SelectPrev",

      // settings
      "cmd-shift-,": "zed::OpenDefaultSettings",
      "cmd-.": "zed::OpenKeymap",
      "cmd->": "zed::OpenDefaultKeymap", // cmd-shift-.
      "cmd-shift-k": "vim::OpenDefaultKeymap",

      // panes (aka tabs)
      "ctrl-tab": "pane::ActivateNextItem",
      "ctrl-shift-tab": "pane::ActivatePrevItem",
      "alt-t": "workspace::NewCenterTerminal",

      // toggles
      "alt-w": "editor::ToggleSoftWrap",
      "alt-h": "editor::ToggleInlayHints",
      "alt-d": "editor::ToggleHunkDiff",
      // "alt-shift-d": "editor::RevertSelectedHunks",
      "alt-b": "editor::ToggleGitBlame",

      // windows
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      // "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"],

      // tasks
      "alt-r": "task::Rerun",
      "alt-shift-r": "task::Spawn"

      // https://github.com/zed-industries/zed/discussions/10717
      // "cmd-]": [
      //     "workspace::SendKeystrokes",
      //     "cmd-k right cmd-k cmd-left cmd-w cmd-k cmd-right"
      // ]

      // wishlist: folding levels, align selections, increase/decrease pane size, move pane to right/left, no search wrap, pin tab, x/c delete to blackhole register,
      // plugins: undotree, toggle quotes, flash, rainbow parentheses, indent guides, customize statusline, dim inactive pane, which key
      // "ctrl-cmd-c": "editor::DisplayCursorNames" <- what does this do?
    }
  },

  // vim bindings
  {
    // normal + visual
    "context": "Editor && (vim_mode == normal || vim_mode == visual)",
    "bindings": {
      "ctrl-a": "pane::AlternateFile",
      // leader
      "space f": "file_finder::Toggle",
      "space w": "workspace::Save",
      "space o": "editor::NewlineBelow",
      "space O": "editor::NewlineAbove",
      "space p": ["workspace::SendKeystrokes", "cmd-enter p"],
      "space P": ["workspace::SendKeystrokes", "cmd-shift-enter p"],

      // movement
      "H": ["vim::FirstNonWhitespace", { "displayLines": true }],
      "L": ["vim::EndOfLine", { "displayLines": true }],
      "j": ["vim::Down", { "displayLines": true }],
      "k": ["vim::Up", { "displayLines": true }],
      "J": ["workspace::SendKeystrokes", "6 j z z"],
      "K": ["workspace::SendKeystrokes", "6 k z z"],
      "[ d": "editor::GoToPrevDiagnostic",
      "] d": "editor::GoToDiagnostic",
      "[ h": "editor::GoToHunk",
      "] h": "editor::GoToPrevHunk",

      // editing
      "Y": ["workspace::SendKeystrokes", "y $"],
      "U": "editor::Redo",
      "ctrl-c": "editor::ToggleComments",
      "-": "vim::Decrement",
      "=": "vim::Increment",
      "alt-j": "editor::MoveLineDown",
      "alt-k": "editor::MoveLineUp",
      "alt-shift-j": "editor::DuplicateLineDown",
      "alt-shift-k": "editor::DuplicateLineUp",
      "shift-tab": "editor::Outdent",
      "tab": "editor::Indent",

      // g actions
      "g a": "editor::ToggleCodeActions",
      "g s": "editor::Hover",

      "g e": "editor::OpenExcerptsSplit",
      "g E": "editor::OpenExcerpts",
      "g r": "editor::FindAllReferences",
      "g R": "editor::Rename",
      "g d": "editor::GoToDefinitionSplit",
      "g D": "editor::GoToDefinition",

      // multiple cursors
      "g m": "editor::SelectAllMatches",
      "g n": "editor::SelectNext",
      "g p": "editor::SelectPrevious",
      "g N": ["editor::SelectNext", { "replace_newest": true }],
      "g P": ["editor::SelectPrevious", { "replace_newest": true }],

      // windows
      "ctrl-w v": "pane::SplitRight",
      "ctrl-w s": "pane::SplitDown",
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"]
    }
  },
  {
    // normal mode
    "context": "Editor && vim_mode == normal",
    "bindings": {
      "enter": ["workspace::SendKeystrokes", "c i w"],
      "shift-enter": ["workspace::SendKeystrokes", "c i \""],
      "ctrl-enter": ["workspace::SendKeystrokes", "c i '"]
    }
  },
  {
    // visual modes
    "context": "Editor && vim_mode == visual",
    "bindings": {
      "V": "vim::Down",
      "ctrl-v": "vim::Down",
      "enter": "vim::Substitute",
      "v": "editor::SelectLargerSyntaxNode",
      "backspace": "editor::SelectSmallerSyntaxNode"
    }
  },
  {
    // insert mode
    "context": "Editor && vim_mode == insert",
    "bindings": {
      "shift-backspace": "vim::DeleteRight",
      "ctrl-x": "editor::ShowCompletions",
      // "ctrl-a": "assistant::InlineAssist",
      "ctrl-i": "editor::ShowInlineCompletion",
      "ctrl-c": "editor::Cancel",
      // disable defaults
      "ctrl-x ctrl-o": null,
      "ctrl-x ctrl-a": null,
      "ctrl-x ctrl-c": null,
      "ctrl-x ctrl-l": null,
      "ctrl-x ctrl-z": null
    }
  },

  // completions
  {
    "context": "Editor && (showing_code_actions || showing_completions)",
    "bindings": {
      "tab": "editor::ContextMenuNext",
      "shift-tab": "editor::ContextMenuPrev"
    }
  },

  // search
  {
    "context": "BufferSearchBar",
    "bindings": {
      "enter": "search::SelectNextMatch"
    }
  },

  // explorer
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "backspace": "project_panel::Trash",
      "cmd-backspace": ["project_panel::Trash", { "skip_prompt": true }],
      "tab": "project_panel::Open", // preview
      "r": "project_panel::Rename"
    }
  },

  // terminal
  {
    "context": "Terminal",
    "bindings": {
      "cmd-n": "workspace::NewTerminal"
    }
  },

  // tab switcher
  {
    "context": "TabSwitcher",
    "bindings": {
      "ctrl-d": "tab_switcher::CloseSelectedItem"
    }
  }
]
