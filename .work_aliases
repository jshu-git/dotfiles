export PATH=$PATH/x/eng/rats/openlab/node_modules/azure-cli/bin:/x/eng/rats/openlab/bin:/usr/software/bin:/usr/software/utils/bin:/usr/software/rats/bin:/usr/software/java/ec2-api-tools-1.6.12.0/bin:/usr/software/test/bin:/usr/lib64/qt-3.3/bin:/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/bin:/bin:/usr/bin

# for jenkins
export JAVA_HOME=~/java/jdk/jdk-11.0.12+7
export PATH="$JAVA_HOME/bin:$PATH"

# seclab
export http_proxy="http://10.251.20.33:3128"
export https_proxy="http://10.251.20.33:3128"
export HTTPS_PROXY="http://10.251.20.33:3128"
export HTTP_PROXY="http://10.251.20.33:3128"
export no_proxy=*.netapp.com
export AWS_PAGER=""
export AWS_CA_BUNDLE=/x/eng/localtest/noarch/dev/nate/docker/cloud_test/etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt

# gcp
export CLOUDSDK_PYTHON="/u/jshu/bin/python"

# azure
#export REQUESTS_CA_BUNDLE="/etc/ssl/certs/ca-bundle.crt"
export REQUESTS_CA_BUNDLE="/x/eng/localtest/noarch/dev/nate/docker/cloud_test/etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt"
export NO_PROXY=*.netapp.com

alias ssh='ssh -F ~/.ssh/real_config'
# p4/burt
alias s='p4 -I sync -q'
alias cstat='p4 cstat ...'
alias p='cc ~/p4'
alias p4o='p4 opened' # todo
alias p4d='p4 diff'
alias p4r='p4 resolve'
alias p4c='func_set_change_number'
alias c='func_changes'
alias newb='func_newburt'
alias newc='func_newchange'

alias creds="source /u/jshu/ctl_aws_credentials.sh"
alias cloud='cc test/lib/NACL/AppBuilder/Cloud'
alias testpod="ssh root@10.160.153.28"
alias cit='ssh cycl.pubbub1.gdl.englab.netapp.com'
alias devn='cd /x/eng/rlse/DOT/devN && ls -alt /x/eng/rlse/DOT/devN'
alias pcl='cc offtap/sdk/ontap_pcl/src'
alias cacl='cc test/tools/python/cat/rhel7-3.11.2/lib/python3.11/site-packages/cacl'
alias nl='func_nl'
alias presub='/x/eng/csitools/rb_test_monitor/do_testing.sh'

# su as someone
become() {
    if [ "$#" -eq  "0" ]
    then
         echo "Provide a username"
    else
        sudo su - --shell=/bin/bash "$1"
    fi
}

# quick submit
submit() {
    if [ "$#" -eq  "0" ]
    then
         echo "Provide a change number to submit"
    else
        p4 -I -q submit -c $1
    fi
}

# p4 changes
func_changes() {
    if [ "$#" -eq  "0" ]
    then
        p4 changes -m 10 ...
    else
        p4 changes -m $1 ...
    fi
}

# must be in Cloud folder because natelinting with full path is goofy
func_nl() {
    #root=$(p4 -F %clientRoot% -ztag info 2>/dev/null)
    root="/u/jshu/p4/cacl"
    changed_files=$(p4 opened | sed -E 's@//depot/prod/DOT/.*/test/lib/NACL/AppBuilder/[^/]+/@@' | sed -r 's/#[0-9]+ - .*$//')
    nl_path="$root/test/nate/bin/natelint"
    for f in $changed_files; do
        output=$($nl_path $f 2>&1)
        if [[ $output == *'syntax OK'* ]]
        then
            echo "PASS $f"
        else
            echo "FAIL $f"
            printf '%s\n' "$output"
            break
        fi
    done
}

# nxtest
run_nxtest() {
    if [ -z $1 ]
    then
        echo "Provide a p4client name"
    else
        ~/p4/${1}/test/nate/bin/ntest -noconsole -notclifecycle -noindex "${@:2}"
    fi
}

# new burt
func_newburt() {
    if [ -z "$@" ]
    then
        echo "Provide a title"
    else
        burt_new -public no -doc_impact NO -found_by qa_automation_development -sev 3 -pri B -type TOOLS -subtype vsa_cloud -owner jshu -title "$@"
    fi
}

# new change request
func_newchange() {
    if [ "$#" -lt 2 ]
    then
        echo "Provide a description and burt number"
    else
        output=$(echo ` \
        p4 change -o \
        | sed "/#Propagate/d" \
        | sed "s/Propagate:.*/Propagate: DOT:R9.13.1x ;;/" \
        | sed "s/<enter description here>/$1/" \
        | sed "s/#burt<NNNNN>.*/burt$2 fixed TESTME ;;/" \
        | sed "s/#Reviewer.*/Reviewer: jshu,pshettyn,mcclella,ssciandr,marieire,kruff,jhollowe,etiennet ;;/" \
        | p4 change -i
        `)
        # echo $output
        number=$(echo $output | awk '{print $2}')
        p4 change $number
    fi
}

func_set_change_number() {
    if [ -z "$cn" ]
    then
        cn=$(p4o | head -1 | awk '{print $5}')
    fi
    echo $cn
}
